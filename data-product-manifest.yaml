version: 0.0.1
discoveryPort:
  name: "csv file as source input port"
  description: Data product to verify the webhook implementation with csv file as source
  category: customer
  image: http:
  autofillUserinfo: true
  tags:
    - Madrid
    - House Rental
  extra: {}
inputPorts:
  - alias: user1_S3_input_port
    description: string
    tags: []
    extra: {}
    syncType: pull
    type: s3
    sourceUrn: urn:dv:datasource:1e401b2b-cdb7-4a82-98cd-5784f4568c9b
    entityId:
      alias: user1
      createEntity: true
      entityName: houses_Madrid.parquet
      type: s3-bucket
      entityPath: s3://dp-input-bucket/Multiple_Input_test2/cars_Data.csv
      entityFilterPatternMatch: "*"
      sourceSchemaUrn: urn:dv:schema:9d4716d4
      projectSchemaUrn: urn:dv:schema:9d4716d6
      fileFormat: csv
      delimiter: ","
      filter: ""
      processingTimeColumn:
        - test
      actualTimeColumn:
        - test
      projection:
        - "sl no"
        - brand
        - model
stateManagement:
  alias: multiple_input_Test
  refreshInterval: 00 10 * * *
  updateStrategy: SCD-2
  productStoreState:
    logicalSchemaUrn: urn:dv:schema:263deedb-916b-40f2-9740-6ee02ce9b8b9
    retentionVersions: "10"
  updateStrategyOptions:
    - entityRef: test
      uniqueKeyColumns:
        - test
      changeTrackColumns:
        - test
transformation:
  sql: select * from user1, user2
