---
version: 0.0.1
discoveryPort:
  name: Create DP with a valid Parquet file
  description: Valid parquet file containing the test data
  category: customer
  image: http://google.com
  autofillUserinfo: true
  tags: [Parquet, DP]
  extra: {}
inputPorts:
  - alias: s3_parquet_testing
    description: Test data parquet file in S3 bucket
    tags: []
    extra: {}
    syncType: pull
    type: s3
    sourceUrn: urn:dv:datasource:1e401b2b-cdb7-4a82-98cd-5784f4568c9b
    entityId:
      alias: dv_parquet_Test
      createEntity: true
      type: s3-bucket
      entityPath: s3a://dp-input-bucket/Parquet_Files/
      entityFilterPatternMatch: "*.parquet"
      delimiter: ','
      header: true
      incrematalFetchNamePattern: ""
      incremetal: false
      sourceSchemaUrn: urn:dv:schema:9d4716d4
      projectSchemaUrn: urn:dv:schema:9d4716d6
      filter: ""
      fileFormat: parquet
      processingTimeColumn:
        - created_date
      actualTimeColumn:
        - created_date
      projection:
        - '*'
        
stateManagement:
  alias: dv_parquet
  refreshInterval: 00 10 * * *
  updateStrategy: append
  productStoreState:
    logicalSchemaUrn: urn:dv:schema:263deedb-916b-40f2-9740-6ee02ce9b8b9
    retentionVersions: "10"
  updateStrategyOptions:
    - entityRef: urn:dv:datasource:6d4714c3
      uniqueKeyColumns:
        - nothing
      changeTrackColumns:
        - nothing
transformation:
  sql: select * from dv_parquet_Test
